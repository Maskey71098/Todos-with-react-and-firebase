{"ast":null,"code":"import _slicedToArray from\"C:/Users/Dell/todoapp_firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _readOnlyError from\"C:/Users/Dell/todoapp_firebase/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";import React from'react';import{list,ListItem,ListItemAvatar,Avatar,ListItemText,Button,Modal}from'@material-ui/core';import db from'./firebase';import DeleteIcon from'@material-ui/icons/Delete';import{makeStyles}from'@material-ui/core/styles';import{useState}from'react';import EditIcon from'@material-ui/icons/Edit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function rand(){return Math.round(Math.random()*20)-10;}function getModalStyle(){var top=50+rand();var left=50+rand();return{top:\"\".concat(top,\"%\"),left:\"\".concat(left,\"%\"),transform:\"translate(-\".concat(top,\"%, -\").concat(left,\"%)\")};}var useStyles=makeStyles(function(theme){return{paper:{position:'absolute',backgroundColor:theme.palette.background.paper,border:'2px solid #000',boxShadow:theme.shadows[5],padding:theme.spacing(2,4,3)}};});function Todo(props){var classes=useStyles();var _React$useState=React.useState(getModalStyle),_React$useState2=_slicedToArray(_React$useState,1),modalStyle=_React$useState2[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var handleOpen=function handleOpen(){true,_readOnlyError(\"setOpen\");};var updateTodo=function updateTodo(){// update the todo with the new input text \ndb.collection('todos').doc(props.todo.id).set({todo:input},{merge:true});// basically appends\nsetOpen(false);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Modal,{open:open,onClose:function onClose(e){return setOpen(false);},children:/*#__PURE__*/_jsxs(\"div\",{style:modalStyle,className:classes.paper,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit your todo!\"}),/*#__PURE__*/_jsx(\"input\",{placeholder:props.todo.todo,value:input,onChange:function onChange(event){return setInput(event.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:updateTodo,children:\"Edit Todo\"})]})}),/*#__PURE__*/_jsx(\"list\",{children:/*#__PURE__*/_jsxs(ListItem,{children:[/*#__PURE__*/_jsx(ListItemAvatar,{}),/*#__PURE__*/_jsx(ListItemText,{primary:props.todo.todo,secondary:\"Dummy deadline\"}),/*#__PURE__*/_jsx(EditIcon,{variant:\"contained\",color:\"primary\",onClick:function onClick(e){return setOpen(true);},children:\"Edit\"}),/*#__PURE__*/_jsx(DeleteIcon,{variant:\"contained\",color:\"secondary\",onClick:function onClick(event){return db.collection('todos').doc(props.todo.id).delete();},children:\"DELETE\"})]})})]});}export default Todo;","map":{"version":3,"sources":["C:/Users/Dell/todoapp_firebase/src/Todo.js"],"names":["React","list","ListItem","ListItemAvatar","Avatar","ListItemText","Button","Modal","db","DeleteIcon","makeStyles","useState","EditIcon","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","modalStyle","open","setOpen","input","setInput","handleOpen","updateTodo","collection","doc","todo","id","set","merge","e","event","target","value","delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {list, ListItem, ListItemAvatar, Avatar, ListItemText, Button, Modal} from '@material-ui/core';\r\nimport db from './firebase';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useState} from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10;\r\n  }\r\n  \r\n  function getModalStyle() {\r\n    const top = 50 + rand();\r\n    const left = 50 + rand();\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nfunction Todo(props) {\r\n    const classes = useStyles();\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState();\r\n    const handleOpen = () => {\r\n        setOpen=(true);\r\n    };\r\n\r\n    const updateTodo = () => {\r\n        // update the todo with the new input text \r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input,\r\n        }, {merge: true}) // basically appends\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Modal\r\n        open={open}\r\n        onClose={e => setOpen(false)}\r\n        >\r\n        <div style={modalStyle} className={classes.paper}>\r\n            <h1>Edit your todo!</h1>\r\n            <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)} />\r\n            <button onClick={updateTodo}>Edit Todo</button>\r\n        </div>\r\n        </Modal>\r\n        <list>\r\n            <ListItem> \r\n                <ListItemAvatar>\r\n                </ListItemAvatar>\r\n                    <ListItemText primary={props.todo.todo} secondary=\"Dummy deadline\">\r\n                    </ListItemText>\r\n                    <EditIcon variant=\"contained\" color=\"primary\" onClick={e => setOpen(true)}>Edit</EditIcon>\r\n                    <DeleteIcon variant=\"contained\" color=\"secondary\" onClick={event => db.collection('todos').doc(props.todo.id).delete()}>DELETE</DeleteIcon>\r\n\r\n            </ListItem>\r\n        </list>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}