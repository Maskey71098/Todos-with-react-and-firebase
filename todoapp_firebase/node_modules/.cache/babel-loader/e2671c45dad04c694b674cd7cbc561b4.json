{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\todoapp_firebase\\\\src\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { list, ListItem, ListItemAvatar, Avatar, ListItemText, Button, Modal } from '@material-ui/core'; // import './Todo.css';\n\nimport db from './firebase';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Todo(props) {\n  _s();\n\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [input, setInput] = useState();\n\n  const handleOpen = () => {\n    setOpen = true;\n  };\n\n  const updateTodo = () => {\n    // update the todo with the new input text \n    db.collection('todos').doc(props.todo.id).set({\n      todo: input\n    }, {\n      merge: true\n    }); // basically appends\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: e => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.paper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Edit your todo!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: props.todo.todo,\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: updateTodo,\n          children: \"Edit Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"list\", {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {\n        children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: props.todo.todo,\n          secondary: \"Dummy deadline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(EditIcon, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: e => setOpen(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: event => db.collection('todos').doc(props.todo.id).delete(),\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Todo, \"k5Tvj5dOjn3x9NnMnAbjaO07i+c=\", false, function () {\n  return [useStyles];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["C:/Users/Dell/todoapp_firebase/src/Todo.js"],"names":["React","list","ListItem","ListItemAvatar","Avatar","ListItemText","Button","Modal","db","DeleteIcon","makeStyles","useState","EditIcon","useStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","open","setOpen","input","setInput","handleOpen","updateTodo","collection","doc","todo","id","set","merge","e","event","target","value","delete"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {list, ListItem, ListItemAvatar, Avatar, ListItemText, Button, Modal} from '@material-ui/core';\r\n// import './Todo.css';\r\nimport db from './firebase';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useState} from 'react'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n\r\nfunction Todo(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const [input, setInput] = useState();\r\n    const handleOpen = () => {\r\n        setOpen=(true);\r\n    };\r\n\r\n    const updateTodo = () => {\r\n        // update the todo with the new input text \r\n        db.collection('todos').doc(props.todo.id).set({\r\n            todo: input,\r\n        }, {merge: true}) // basically appends\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Modal\r\n        open={open}\r\n        onClose={e => setOpen(false)}\r\n        >\r\n        <div className={classes.paper}>\r\n            <h1>Edit your todo!</h1>\r\n            <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)} />\r\n            <button onClick={updateTodo}>Edit Todo</button>\r\n        </div>\r\n        </Modal>\r\n        <list>\r\n            <ListItem> \r\n                <ListItemAvatar>\r\n                </ListItemAvatar>\r\n                    <ListItemText primary={props.todo.todo} secondary=\"Dummy deadline\">\r\n                    </ListItemText>\r\n                    <EditIcon variant=\"contained\" color=\"primary\" onClick={e => setOpen(true)}>Edit</EditIcon>\r\n                    <DeleteIcon variant=\"contained\" color=\"secondary\" onClick={event => db.collection('todos').doc(props.todo.id).delete()}>DELETE</DeleteIcon>\r\n\r\n            </ListItem>\r\n        </list>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}