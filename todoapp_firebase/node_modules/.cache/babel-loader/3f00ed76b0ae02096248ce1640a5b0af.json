{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\todoapp_firebase\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core';\nimport Todo from './Todo';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //State for todos, which we later map to list it out\n  const [todos, setTodos] = useState([]); //State for input\n\n  const [input, setInput] = useState('');\n  console.log(input); //when the app loads, we need to listen to the database and fetch new todos as they get added amd removed\n  //for this we use a hook called useEffect\n\n  useEffect(() => {\n    //this code fires up when app.js loads\n    db.collection('todos').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => doc.data().todo));\n    });\n  }, []);\n\n  const addTodo = event => {\n    //this will trigger the add todo button\n    event.preventDefault(); //prevents refreshing page when submit\n\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    console.log('im working');\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello World!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Write a Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !input,\n        type: \"submit\",\n        onClick: addTodo,\n        Button: true,\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SDobY1vKIpQLgk4wriOc+3n27bo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Dell/todoapp_firebase/src/App.js"],"names":["useState","useEffect","Button","FormControl","Input","InputLabel","Todo","db","firebase","App","todos","setTodos","input","setInput","console","log","collection","onSnapshot","snapshot","docs","map","doc","data","todo","addTodo","event","preventDefault","add","timestamp","firestore","FieldValue","serverTimestamp","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA6BC,KAA7B,EAAoCC,UAApC,QAAqD,mBAArD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,QAAP,MAAqB,UAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC,CAFa,CAIb;;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EANa,CAQb;AACA;;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACAM,IAAAA,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAkCC,QAAQ,IAAI;AAC5CP,MAAAA,QAAQ,CAACO,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,GAAWC,IAApC,CAAD,CAAR;AACD,KAFD;AAID,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB;AAEAA,IAAAA,KAAK,CAACC,cAAN,GAHyB,CAGD;;AACxBnB,IAAAA,EAAE,CAACS,UAAH,CAAc,OAAd,EAAuBW,GAAvB,CAA2B;AACzBJ,MAAAA,IAAI,EAAEX,KADmB;AAEzBgB,MAAAA,SAAS,EAAEpB,QAAQ,CAACqB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAFc,KAA3B;AAIAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAED,GAXD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,8BACE,QAAC,WAAD;AAAA,gCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAED,KAAd;AAAqB,UAAA,QAAQ,EAAEa,KAAK,IAAIZ,QAAQ,CAACY,KAAK,CAACO,MAAN,CAAaC,KAAd;AAAhD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACrB,KAAnB;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAwC,QAAA,OAAO,EAAEY,OAAjD;AAA0D,QAAA,MAAM,MAAhE;AAAiE,QAAA,OAAO,EAAC,WAAzE;AAAqF,QAAA,KAAK,EAAC,SAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAcA;AAAA,gBACGd,KAAK,CAACU,GAAN,CAAUG,IAAI,iBACb,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArDQd,G;;KAAAA,G;AAuDT,eAAeA,GAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport './App.css';\nimport {Button, FormControl, Input, InputLabel} from '@material-ui/core';\nimport Todo from './Todo';\nimport db from './firebase';\nimport firebase from 'firebase'\n\nfunction App() {\n  //State for todos, which we later map to list it out\n  const [todos, setTodos] = useState([]); \n\n  //State for input\n  const [input, setInput] = useState('');\n  console.log(input);\n\n  //when the app loads, we need to listen to the database and fetch new todos as they get added amd removed\n  //for this we use a hook called useEffect\n\n  useEffect(() => {\n    //this code fires up when app.js loads\n    db.collection('todos').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => doc.data().todo));\n    })\n    \n  }, []);\n\n  const addTodo = (event) => {\n    //this will trigger the add todo button\n\n    event.preventDefault(); //prevents refreshing page when submit\n    db.collection('todos').add({\n      todo: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    console.log('im working');\n    setInput('');\n\n  }\n  return (\n    <div className=\"App\">\n    <h1>Hello World!</h1>\n    <form>\n      <FormControl>\n        <InputLabel>Write a Todo</InputLabel>\n        <Input value={input} onChange={event => setInput(event.target.value)}/>\n      </FormControl>\n\n      <Button disabled={!input} type=\"submit\" onClick={addTodo} Button variant=\"contained\" color=\"primary\">\n          Add Todo\n      </Button>\n    </form>\n    \n\n    <ul>\n      {todos.map(todo => (\n        <Todo todo={todo} />\n      ))}\n    </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}